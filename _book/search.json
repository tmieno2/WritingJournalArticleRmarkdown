[
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Writing Reproducible Journal Articles using Rmarkdown",
    "section": "Welcome",
    "text": "Welcome\nThis book provides an introduction to machine learning methods for economists with a strong focus on causal machine learning methods. It is still under development and it still has a long way to go before it is completed. One thing that may distinguish this book from the books on machine learning methods on the market is that it attempts to be illustrative and easy to understand for those who are not familiar with machine learning methods. This is done by providing step-by-step R codes to enhance understanding of various algorithms. This, however, does not mean that anybody can read the book and understand the materials. It is desirable that you have gone through 1st-year Ph.D. econometrics sequence (or equivalent)."
  },
  {
    "objectID": "index.html#license",
    "href": "index.html#license",
    "title": "Writing Reproducible Journal Articles using Rmarkdown",
    "section": "License",
    "text": "License\nThis website is (and will always be) free to use, and is licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 4.0 License."
  },
  {
    "objectID": "intro.html#required-knowledge",
    "href": "intro.html#required-knowledge",
    "title": "1  Introduction",
    "section": "1.1 Required knowledge",
    "text": "1.1 Required knowledge\n\nwrite mathematical equations using latex(-like) syntax\nhow to use citation manager (you should know this anyway if you are a scholar)"
  },
  {
    "objectID": "intro.html#why-rmarkdown",
    "href": "intro.html#why-rmarkdown",
    "title": "1  Introduction",
    "section": "1.2 Why Rmarkdown",
    "text": "1.2 Why Rmarkdown\n\nNo manual copying and pasting of tables and figures\nNo manual formatting of tables and figures when they get updated in the course of your research projects\nNo manual updating of data-driven numbers (e.g., coefficient estimates, summary numbers) in text"
  },
  {
    "objectID": "intro.html#what-can-you-do-with-rmarkdown-word",
    "href": "intro.html#what-can-you-do-with-rmarkdown-word",
    "title": "1  Introduction",
    "section": "1.3 What can you do with Rmarkdown-WORD?",
    "text": "1.3 What can you do with Rmarkdown-WORD?\n\ninclude (run) R codes to\n\nrun statistical or modeling analysis\n\ncreate figures (e.g., the ggplot2 package)\ncreate tables (e.g., the modelsummary and flextable packages)\n\nrefer to the R objects generated (data, tables, figures) to place them in the output WORD file\ncross-reference tables and figures using special syntaxes\ncreate citations and a reference list automatically using special syntaxes\nformat citation and reference styles using Citation Style Language\nuse Latex math syntax to write equations\nuse markdown syntax for formatting the output WORD file\n\nheadings\nfootnotes"
  },
  {
    "objectID": "intro.html#word-or-pdf",
    "href": "intro.html#word-or-pdf",
    "title": "1  Introduction",
    "section": "1.4 WORD or PDF?",
    "text": "1.4 WORD or PDF?"
  },
  {
    "objectID": "WORD.html#preparation",
    "href": "WORD.html#preparation",
    "title": "2  Knit to a WORD file",
    "section": "2.1 Preparation",
    "text": "2.1 Preparation\nBefore diving in, please do the followings:\n\nGo [here](https://www.dropbox.com/sh/l95j7vk8sxl2nnu/AAAwWMl8yO6Vbj0u_9zd_fv6a?dl=0) and download all the files including sample_to_word.rmd, which we refer to as the sample rmd file throughout this chapter.\nKnit sample_to_word.Rmd to produce sample_to_word.docx, which we refer to as the sample WORD file.\nInstall the following packages if you have not\n\nofficedown\nflextable\nofficer\nknitr\nrmarkdown\ntidyverse\nmodelsummary"
  },
  {
    "objectID": "WORD.html#structure-of-the-rmarkdown-file",
    "href": "WORD.html#structure-of-the-rmarkdown-file",
    "title": "2  Knit to a WORD file",
    "section": "2.3 Structure of the rmarkdown file",
    "text": "2.3 Structure of the rmarkdown file\nThe ramrkdown file consits mainly of two components.\n\nYAML header\nMain body\n\n\n2.3.1 YAML header\nYAML header comes at the very top of the rmarkdown file and it lets you specify things like\n\npaper title\nauthors\ndate\nabstract\n\nIt also lets you specify various aspects of the output word file including\n\nwhether to include table of contents (toc)\nthe depth of table of contents (toc_depth)\nwhether to number sections or not (number_sections)\nhow to display plots and tables (plots, tables)\n\nalignment (align)\nprefix (pre), etc\n\n\nThis is also where you specify what files you use as bibliography, citation style, among other things. Important ones will be introduced later.\nHere is an example YAML header, which you can see in sample_to_word.rmd file.\n\n\n\n\n\nMore detailed explanation of out put options will be provided later individually when the relevant topics are discussed.\n\n\n2.3.2 Main body\nThis is where narratives and R codes are written."
  },
  {
    "objectID": "WORD.html#control-of-some-elements-in-word-through-rmarkdown",
    "href": "WORD.html#control-of-some-elements-in-word-through-rmarkdown",
    "title": "2  Knit to a WORD file",
    "section": "2.4 Control of some elements in WORD through Rmarkdown",
    "text": "2.4 Control of some elements in WORD through Rmarkdown\n\n2.4.1 Section, subsection, subsubsections\nYou can use #, ##, ### at the beginning of the line to define sections, subsections, and subsubsections.\n\n# This becomes section title\n\n## This becomes subsection title\n\n### This becomes subsubsection title\n\n\n\n\n\n\n\nNote\n\n\n\n\nConfirm that # Materials and Methods and ## Data in sample_to_word.rmd turn into a section and subsection title in sample_to_word.docx.\nNote also that the sections and subsections are automatically numbered because number_sections: true in the YAML header.\n\n\n\n\n\n\n2.4.2 Footnote\nYou can add a footnote using ^[] like this:\n\nregular texts^[this is a footnote]\n\nFootnotes are automatically numbered.\n\n\n\n\n\n\nNote\n\n\n\nSee the Conclusion section of sample_to_word.rmd and sample_to_word.docx.\n\n\n\n\n\n2.4.3 Line and page break\nYou can create a line break by inserting the following.\n&lt;br&gt;\n\n\n\n\n\n\nTip\n\n\n\n\nIf &lt;br&gt; is placed in the same line as the one after which you want a break, then it does not give you a line break. Rather, put &lt;br&gt; in the next line.\nConfirm this by inspecting the Materials and Methods section of the sample rmd and word files.\n\n\n\nTo break a page, use\n\n`r run_pagebreak()`\n\n\n\n\n\n\n\nNote\n\n\n\nConfirm this by inspecting the end of the Introduction section of the sample rmd and word files."
  },
  {
    "objectID": "WORD.html#specifying-the-style-of-the-output-word-file-in-detail",
    "href": "WORD.html#specifying-the-style-of-the-output-word-file-in-detail",
    "title": "2  Knit to a WORD file",
    "section": "2.5 Specifying the style of the output WORD file in detail",
    "text": "2.5 Specifying the style of the output WORD file in detail\nRmarkdown itself is very limited in its ability to specify the style of the output WORD file. Few exceptions are:\n\nbold font: **this becomes bold** (or __this becomes bold__)\nitalic font: *this becomes italic*\n\n\n\n\n\n\n\nNote\n\n\n\nConfirm these by comparing the first sentence in the Introduction section of the sample rmd and WORD files.\n\n\nHowever, you can define the style of the output WORD file in detail using a style reference WORD file. This method can control virtually every aspect of WORD file styling. Some of the commonly customized elements among others are\n\nfont size\nfont family\nline spacing\n\nTo do this, you first create a style reference word file that follows the style and format you would like the output WORD file to have. Then, add the following to the YAML header under output: like below.\n\noutput:\n  reference_docx: word-style.docx\n\nIn our example project, word_template.docx is the reference file.\n\n\n\n\n\nOf course, only the style and format of the reference WORD file will be inherited to the output WORD file, but not its contents.\n\n\n\n\n\n\nNote\n\n\n\n\nCompared the style of sample_to_word.docx and “word_template.docx” and confirm they have the same font size and family for the narattive, sections, subsections, and subsubsection.\nUncomment reference_docx: word_template.docx in the YAML header, knit to a WORD file, and check the style of sample_to_word.dcox again\n\n\n\nYou can change the style of the reference WORD style file and save the changes. Then, the style changes will be reflected in the output WORD file when the rmd file is knitted next time.\n\n\n\n\n\n\nTip\n\n\n\nTo create a style file for your liking you may find this Microsoft tutorial and this book chapter in (xie2020r?) useful."
  },
  {
    "objectID": "WORD.html#citations-and-references",
    "href": "WORD.html#citations-and-references",
    "title": "2  Knit to a WORD file",
    "section": "2.6 Citations and References",
    "text": "2.6 Citations and References\n\n2.6.1 Set up\nFirst, create a reference file. Then, add the following to the YAML header (not under output:).\n\nbibliography: bibliography file name\n\nThere are various bibliography systems that can be used:\n\n\n\n\nformatextensionCSL-JSON.jsonMODS.modsBibLaTeX/BibTex.bibRIS.risEndNote.enlEndNote XML.xmlISI.wosMEDLINE.medlineCopac.copac\n\n\nThen, add\n\n::: {#refs}\n:::\n\nto the part of rmd where you want to put references.\nIn our example, we use a bib file and the bibliography file is named bibliography.bib and specified in the YAML header as below\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nSee the sample rmd file to see how bibliography file is specified in the YAML header\nConfirm that {#refs} enclosed by :::is placed in the Reference section of the sample rmd file and confirm that references are indeed added in the Reference section of the output word file\n\n\n\n\n\n\n2.6.2 Cite and create references\nTo cite, use the following syntax:\n\n@reference_name to print “author names (year)” in the output WORD file\n[@reference_name] to print “(author names, year)” in the output WORD file\n[@reference_name_1; @reference_name_2] to print “(author names, year; author names, year)” in the output WORD file\n[-@reference_name] to print just year\n\nreference_name is the very first entry of a .bib file as in\n\n\n\n\n\nIf you are using CSL json file, then it is the id of an entry as in\n\n\n\n\n\nThe cited items as automatically added to the reference following the specified style (see the next section).\n\n\n\n\n\n\nNote\n\n\n\n\nSee the Introduction and Reference sections in the sample rmd and WORD files to confirm this rule.\nComment out bibliography: bibliography.bib and uncomment bibliography: bibliography.csl, knit again, and check citations and references are still there. This is just an illustration of using a different bibliography file (CSL json file).\n\n\n\n\n\n\n2.6.3 Citation and Reference Style\nYou can change the citation and reference style using Citation Style Language. Citattion style files have .csl extension.\n\nObtain the csl file you would like to use from the Zotero citation style repository.\nPlace the following in the YAML header (not under output:):\n\n\ncsl: csl file name \n\n\nThen, when knitted, citations and references styles reflect what the style specified by the csl file\n\nCurrently, the csl style should be set to qje.csl (citation style language for The Quartely Journal of Economics) as below\n\n\n\n\n\nCitation and references styles in the output WORD file follows the rules for the QJE.\nCitation style observed in the output WORD file (QJE)\n\n\n\n\n\nReference style observed in the output WORD file (QJE)\n\n\n\n\n\nNow, comment csl: qje.csl and uncomment csl: pnas.csl so that the CSL for the Proceedings of the National Academy of Sciences (PNAS) is used, and then knit the sample rmd file.\nYou can now see that the citation style no longer respects the rules I mentioned above and also the reference style follows that of PNAS. This is because PNAS uses only numbers, but not author names or years.\nCitation style observed in the output WORD file (PNAS)\n\n\n\n\n\nReference style observed in the output WORD file (PNAS)"
  },
  {
    "objectID": "WORD.html#cross-referenced-tables",
    "href": "WORD.html#cross-referenced-tables",
    "title": "2  Knit to a WORD file",
    "section": "2.7 Cross-referenced Tables",
    "text": "2.7 Cross-referenced Tables\n\nCreate a table using the flextable package (this is not the only option, and will be discussed later)\nAdd an R code chunk like this:\n\n```{r, tab.id = \"table-id\", tab.cap = \"table-name\"}\ntable_ft\n```\n\ntable_ft is a flextable object.\ntable-name is the caption of the table in the output WORD file\ntable-id is the table id you can use to cross-reference\n\n\nUse \\@ref(tab:table-id) in the rmarkdown file to cross-reference the table (table numbering in the output WORD file is automatic)\n\n\n\n\n\n\n\nImportant\n\n\n\nYou cannot use _ in the table id (- is allowed). Cross-referencing would not work with if the table id includes _.\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nSee the Tables section of the sample rmd for the R codes to create a table using the flextable package and confirm that the table appears in the output WORD files\nSee the bottom of the Data subsection under the Materials and Methods section to confirm that cross-referencing is working.\n\n\n\n\n2.7.1 Packages to create tables\nOne of the disadvantages of writing to a WORD file is that some table-making R packages are not compatible with it. The flextable package is written by the same author of the officedown package, which we are using to write to a WORD file. So, naturally, a table object created by the flextable package (a flextable object) can be knitted into the output WORD without any hiccups as we saw earlier. A notable R package that does NOT work well with the output class of officedown::rdocx_document (which we are using) is the gt package. Tables created by the package is an object of class gt. Unfortunately, there is no function that lets you convert an gt object to a flextable object.\nOne of the recommended packages is the modelsummary package (especially for those who often include regression results tables and summary statistics tables). It lets you create regression results tables via the modelsummary() function and summary statistics tables via the datasummary() function1. Both functions has an option called output and you can use output = \"flextable\" to generate tables as flextable objects, which can then be included in the output file easily.\nHere are some example R codes of using the modelsummary package to create a regression results and summary statistics tables.\nRegression table\n\n#--- regressions ---#\nlm_1 &lt;- lm(mpg ~ hp + cyl, data = mtcars)\nlm_2 &lt;- lm(mpg ~ hp + cyl + wt, data = mtcars)\n\n#--- create a regression results table ---#\nmodelsummary::modelsummary(\n  list(lm_1, lm_2),\n  outpute = \"flextable\" #&lt;&lt;\n)\n\nSummary statistics table\n\nmodelsummary::datasummary(\n  mtcars,\n  output = \"flextable\" #&lt;&lt;\n)\n\n\n\n\n\n\n\nNote\n\n\n\nSee how the exactly the same codes above in the sample rmd file translates into the regression results and summary statistics tables in the output word file."
  },
  {
    "objectID": "WORD.html#cross-referenced-figures",
    "href": "WORD.html#cross-referenced-figures",
    "title": "2  Knit to a WORD file",
    "section": "2.8 Cross-referenced Figures",
    "text": "2.8 Cross-referenced Figures\n\nCreate a figure\nAdd an R code chunk like this:\n\n\nfigure_g is a plot.\nfig.cap = \"caption\" adds caption as the caption of the figure\nfigure-id is the figure id used for cross-referencing\n\n```{r, fig.id = \"figure-id\", fig.cap = \"caption\"}\nfigure_g \n```\n\nUse \\@ref(fig:figure-id) in the rmarkdown file to cross-reference the figure (figure numbering in the output WORD file is automatic)\n\n\n\n\n\n\n\nImportant\n\n\n\nYou cannot use _ in the table id (- is allowed). Cross-referencing would not work with if the table id includes _.\n\n\n\nHere is the rmd-WORD comparison of the part we discussed in this section.\nrmd\n\n\n\n\n\nWORD"
  },
  {
    "objectID": "WORD.html#mathematical-equations",
    "href": "WORD.html#mathematical-equations",
    "title": "2  Knit to a WORD file",
    "section": "2.9 Mathematical equations",
    "text": "2.9 Mathematical equations\nYou can use Latex-like math syntax to write mathematical equations. For equation numbering and cross-referencing to work as discussed here, make sure that you use bookdown::word_document2 for the base_format in the YAML header as below.\n\n\n\n\n\n\n2.9.1 Math equation\nMath for WORD output is much limited compared to writing to a PDF file using Latex (when knitting to a PDF file, Rmarkdown uses Latex to render math equations). This is because Latex is NOT involved in converting Latex-like math syntax to math equations when knitted to WORD. Instead, pandoc is doing the conversion job. So, it is not surprising that not all the Latex math capabilities can be utilized when knitting to a WORD file. With that said, most of the syntaxes that you will need are the same between Rmd-to-WORD and Latex. You can use the equation (for single line of math) and align (more than equal to one equations) environments with successful cross-referencing.\n\nequation environment\nTo use an equation environment, first write math and then put (\\#eq:equation-id) at the end (but before \\end{equation}) to give an equation id to the equation. You can use \\@ref(eq:equation-id) to cross-reference the equation.\n\\begin{equation}\nMath\n(\\#eq:equation-id)\n\\end{equation}\nFor example,\n$$\n\\begin{equation}\n\\bar{y} = \\sum_{i=1}^n y_i\n(\\#eq:eq-1)\n\\end{equation}\n$$\nshould print like below in the output WORD file.\n\\[\n\\begin{equation}\n\\bar{y} = \\sum_{i=1}^n y_i\n\\end{equation}\n\\]\n\nalign environment\nThis works just like equation environment. To use an align environment, first write line(s) of math and then put (\\#eq:equation-id) at the end (but before \\end{align}) to give an equation id to the equation. You can use \\@ref(eq:equation-id) to cross-reference the equation.\n\\begin{align}\nMath\\\\ \nMath\n(\\#eq:equation-id)\n\\end{align}\nFor example,\n$$\n\\begin{align}\n AR(p): Y_i &= c + \\epsilon_i + \\phi_i Y_{i-1} \\dots \\\\\n Y_{i} &= c + \\phi_i Y_{i-1} \\dots\n\\end{align}\n$$\nshould print like below in the output WORD file.\n\\[\n\\begin{align}\nAR(p): Y_i &= c + \\epsilon_i + \\phi_i Y_{i-1} \\dots \\\\\nY_{i} &= c + \\phi_i Y_{i-1} \\dots\n\\end{align}\n\\]\n\n\n\n\n\n\nNote\n\n\n\nSee the bottom of the Statistical Model subsection under the Materials and Methods section of the sample rmd and output WORD files to confirm the equations are numbered and cross-referencing of the equations are done correctly.\n\n\n\n\n2.9.2 In-line math\nTo write a mathematical expresion in line, you can enclose math expressions by $ like below.\nOur model is written as $Y_z = f_z(S) + g_z(N) + h_z(X,Y) + \\varepsilon_z$.\nThis should appear like below in the output WORD file.\nOur model is written as \\(Y_z = f_z(S) + g_z(N) + h_z(X,Y) + \\varepsilon_z\\).\n\n\n\n\n\n\nNote\n\n\n\nSee the bottom of the Statistical Model subsection under the Materials and Methods section of the sample rmd and output WORD files to confirm that $\\beta_1$ is sucessfully rendered as \\(\\beta_1\\) in line in the output WORD file.\n\n\n\nHere is the rmd-WORD comparison of the part we discussed in this section.\nrmd\n\n\n\n\n\nWORD"
  },
  {
    "objectID": "WORD.html#footnotes",
    "href": "WORD.html#footnotes",
    "title": "2  Knit to a WORD file",
    "section": "",
    "text": "The gtsummary package is also compatible. Use as_flex_table() to convert a gtsummary object to a flextable object.↩︎"
  },
  {
    "objectID": "WORD.html#workflow-of-writing-a-journal-article",
    "href": "WORD.html#workflow-of-writing-a-journal-article",
    "title": "2  Knit to a WORD file",
    "section": "2.2 Workflow of writing a journal article",
    "text": "2.2 Workflow of writing a journal article\nHere are the proposed steps to generate a fully publication-ready article:\n\nWrite an Rmarkdown file and knit to a WORD file (the focus of this lecture)\n\nregular texts\nR codes for analysis, tables, figures\n\nDo final formatting jobs on the output WORD file (not discussed here) to the specific needs required by the final destination of the article"
  }
]